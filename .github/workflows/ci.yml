name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '18'

jobs:
  lint-and-format:
    name: Lint and Format Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run ESLint
      run: npm run lint:check
      
    - name: Check Prettier formatting
      run: npm run format:check
      
    - name: TypeScript type checking
      run: npm run typecheck

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: lint-and-format
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Compile contracts
      run: npm run compile
      
    - name: Run tests
      run: npm run test
      
    - name: Run test coverage
      run: npm run test:coverage
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella

  build:
    name: Build Project
    runs-on: ubuntu-latest
    needs: [lint-and-format, test]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build TypeScript
      run: npm run build
      
    - name: Test deployment configuration
      run: npm run test:deployment
      env:
        NETWORK: testnet
        OPERATOR_KEY: ${{ secrets.TEST_OPERATOR_KEY }}
        OPERATOR_ID: ${{ secrets.TEST_OPERATOR_ID }}
        RPC_URL: https://testnet.hashio.io/api

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run npm audit
      run: npm audit --audit-level=moderate
      
    - name: Run Slither analysis (if contracts changed)
      uses: crytic/slither-action@v0.3.0
      id: slither
      with:
        node-version: ${{ env.NODE_VERSION }}
        fail-on: none
        
  deploy-testnet:
    name: Deploy to Testnet
    runs-on: ubuntu-latest
    needs: [lint-and-format, test, build]
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    environment: testnet
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build project
      run: npm run build
      
    - name: Deploy to Hedera Testnet
      run: npm run deploy:testnet
      env:
        NETWORK: testnet
        OPERATOR_KEY: ${{ secrets.TESTNET_OPERATOR_KEY }}
        OPERATOR_ID: ${{ secrets.TESTNET_OPERATOR_ID }}
        RPC_URL: https://testnet.hashio.io/api
        VERIFY_CONTRACTS: true

  deploy-mainnet:
    name: Deploy to Mainnet
    runs-on: ubuntu-latest
    needs: [lint-and-format, test, build]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: mainnet
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build project
      run: npm run build
      
    - name: Deploy to Hedera Mainnet
      run: npm run deploy:mainnet
      env:
        NETWORK: mainnet
        OPERATOR_KEY: ${{ secrets.MAINNET_OPERATOR_KEY }}
        OPERATOR_ID: ${{ secrets.MAINNET_OPERATOR_ID }}
        MAINNET_RPC_URL: https://mainnet.hashio.io/api
        VERIFY_CONTRACTS: true
